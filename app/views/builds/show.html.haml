%h2.subheader
  = link_to(@build.project.name, project_path(@build.project))
  \- Build #{@build.id} - #{@build.ref}
  - if @build.auto_merge_enabled?
    = image_tag 'auto-merge.png', title: 'Auto merge enabled'
    = button_to "Abort Auto Merge", abort_auto_merge_project_build_path(@build.project, @build), :method => :post, :form_class => "abort-auto-merge"
  - if Build::IN_PROGRESS_STATES.include?(@build.state)
    = button_to "Abort Build", abort_project_build_path(@build.project, @build), :method => "put", :class => "abort-build"

.build-info.build-info-subheader
  %span.info
    %span.state{:class => 'build-' + @build.state.to_s}= @build.state.to_s.capitalize
    on
    %span.queue= @build.queue.to_s.capitalize
  - if @build.succeeded? && !@project.main_build?
    %a.info{:href => show_link_to_create_pull_request(@build), :title => 'create a pull request against master'}
      Create pull request
  %span.info= "Created #{time_ago_in_words @build.created_at} ago"
  %span.info= "Updated #{time_ago_in_words @build.updated_at} ago"
  - if @build.completed?
    %span.info= "Built in #{duration_strftime(@build.elapsed_time, "%Hh %Mm %Ss").sub(/^00h 0?/, "")}"
  %a.info.last{:href => show_link_to_commit(@build)}
    Show HEAD commit
  - if @build.failed?
    = button_to "Rebuild All", rebuild_failed_parts_project_build_path(@project, @build), :method => :post, :form_class => "rebuild-parts"


%table.build-summary#build-summary
  %thead
    %tr
      %th.id-column.right Part
      %th.result-column Status
      %th Build Type
      - if build_metadata_header(@build)
        %th= build_metadata_header(@build)
      %th.right Build Host
      %th.right Elapsed Time
      %th.right Attempt #
      %th Actions
  %tbody
    - @build.build_parts.each do |part|
      %tr{:class => cycle("odd-row", "even-row")}
        %td.id-column.right= link_to(part.id, project_build_part_path(@project, @build, part))
        %td.result-column
          %span.part-status{:class => part.status}
            - text = part.status.to_s.capitalize
            - if artifact = part.last_stdout
              =link_to(text, artifact.log_file.url, :title => 'Last completed stdout.log')
            - else
              =text
        %td{:class => part.kind}= part.kind.to_s.capitalize
        - if build_metadata_header(@build)
          %td= build_part_field_value(@build, part)
        %td.right= part.last_attempt ? part.last_attempt.builder : "pending"
        %td.right= part.elapsed_time ? duration_strftime(part.elapsed_time).sub(/^00:0?/, "") : "pending"
        %td.right= part.build_attempts.size
        - if part.unsuccessful?
          %td= link_to("Rebuild", rebuild_project_build_part_path(@project, @build, part), :method => :post)
        - else
          %td

:javascript
  $(document).ready(function() {
    $("#build-summary").tablesorter();
  });
